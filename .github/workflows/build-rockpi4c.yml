name: Build and Release ARM Images

on:
  push:
    tags: [ 'v*' ]

  workflow_dispatch:
    inputs:
      device:
        description: Device to build for, or the word all
        required: true
        default: rockpi4c
      edition:
        description: Edition to build (ignored when device is all)
        required: true
        default: xfce
      version:
        description: Version label (leave blank for auto)
        required: false

jobs:
  build:
    runs-on: ubuntu-latest

    # Decide at run time whether to build a single image or a set
    strategy:
      fail-fast: false
      matrix:
        include: |
          ${{ toJson(fromJSON(
            (github.event_name == 'workflow_dispatch' && inputs.device == 'all')
              ?
              '[{"device":"rockpi4c","edition":"minimal"},{"device":"rockpi4c","edition":"xfce"},{"device":"rockpi4b","edition":"minimal"},{"device":"rockpi4b","edition":"xfce"},{"device":"rpi4","edition":"minimal"},{"device":"rpi4","edition":"xfce"}]'
              :
              format('[{{"device":"{0}","edition":"{1}"}}]', inputs.device, inputs.edition)
          )) }}

    env:
      DEVICE: ${{ matrix.device }}
      EDITION: ${{ matrix.edition }}
      VERSION: ${{ inputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo docker image prune --all --force
          sudo apt-get autoremove -y
          sudo apt-get autoclean

      - name: Install base packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pacman arch-install-scripts \
            qemu-user-static binfmt-support \
            parted dosfstools git wget bsdtar haveged pwgen

      - name: Install Manjaro ARM Tools
        run: |
          sudo mkdir -p /usr/share/manjaro-arm-tools/lib
          git clone --depth 1 https://gitlab.manjaro.org/manjaro-arm/applications/manjaro-arm-tools.git
          sudo install -m 755 manjaro-arm-tools/bin/* /usr/local/bin/
          sudo cp -r manjaro-arm-tools/lib/* /usr/share/manjaro-arm-tools/lib/

      - name: Download ARM profiles
        run: |
          sudo mkdir -p /usr/share/manjaro-arm-tools/profiles
          git clone --depth 1 https://gitlab.manjaro.org/manjaro-arm/applications/arm-profiles.git
          sudo cp -r arm-profiles/* /usr/share/manjaro-arm-tools/profiles/
          sudo ln -s /usr/share/manjaro-arm-tools/profiles /arm-profiles || true

      - name: Write minimal configuration files
        run: |
          sudo install -d /etc/manjaro-arm-tools

          # manjaro-arm-tools.conf
          sudo tee /etc/manjaro-arm-tools/manjaro-arm-tools.conf <<'CONF'
CARCH=aarch64
IMGDIR=/var/cache/manjaro-arm-tools/img
BUILDDIR=/var/lib/manjaro-arm-tools
PKGDIR=/var/cache/manjaro-arm-tools/pkg
COMPRESSION=xz
CONF

          # makepkg.conf
          sudo tee /etc/makepkg.conf <<'MAKE'
CARCH=aarch64
CHOST=aarch64-unknown-linux-gnu
MAKEFLAGS="-j$(nproc)"
PKGEXT='.pkg.tar.xz'
SRCEXT='.src.tar.gz'
MAKE

      - name: Determine version string
        id: ver
        run: |
          if [ -z "$VERSION" ]; then
            if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
              VERSION=${{ github.ref_name }}
              VERSION=${VERSION#v}
            else
              VERSION=$(date +%Y.%m)
            fi
          fi
          echo "value=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Build image
        run: |
          sudo buildarmimg -d "$DEVICE" -e "$EDITION" -v "${{ steps.ver.outputs.value }}"

      - name: Compress image
        run: |
          cd /var/cache/manjaro-arm-tools/img
          IMG=$(ls -t *.img | head -1)
          xz -z -T0 "$IMG"
          echo "FILE=${IMG}.xz" >> "$GITHUB_ENV"

      - name: Generate checksums
        run: |
          cd /var/cache/manjaro-arm-tools/img
          sha256sum "$FILE" > "$FILE.sha256"
          md5sum   "$FILE" > "$FILE.md5"

      - name: Upload build artefacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.DEVICE }}-${{ env.EDITION }}-${{ steps.ver.outputs.value }}
          path: |
            /var/cache/manjaro-arm-tools/img/${{ env.FILE }}
            /var/cache/manjaro-arm-tools/img/${{ env.FILE }}.sha256
            /var/cache/manjaro-arm-tools/img/${{ env.FILE }}.md5
          retention-days: 30

      - name: Create GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            /var/cache/manjaro-arm-tools/img/${{ env.FILE }}
            /var/cache/manjaro-arm-tools/img/${{ env.FILE }}.sha256
            /var/cache/manjaro-arm-tools/img/${{ env.FILE }}.md5
